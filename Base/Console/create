#!/usr/bin/env php
<?php

use App\Base\Console\Colors;
use App\Base\Console\EntityCreator\EntityCreate;
use App\Base\Console\TemplateCreator\TemplateCreate;

require_once ( __DIR__ . '/BaseCreator.php');
require_once ( __DIR__ . '/EntityCreator/EntityCreate.php');
require_once ( __DIR__ . '/TemplateCreator/TemplateCreate.php');
require_once ( __DIR__ . '/Colors.php');

echo "What do you want to create ?\n";
echo message("0 : Entity\n");
echo message("1 : Template\n");
$choice = readline('Choose an option (0 ou 1) : ');

if($choice !== '0' && $choice !== '1') {
    echo error('Invalid choice');
    exit();
}
$action = $choice === '0' ? 'entity' : 'template';

if($action === 'entity') {
    $entityName = readline('Give it a CamelCaseName (Post, Article ...) :');
    $singular   = readline('Give it a name in your language for singular display (Article, Recipe ...) :');
    $plural     = readline('Give it a name in your language for plural display  (Articles, Recipes ...) :');
}

if($action === 'template') {
    $slug         = readline('slug name (Example : recipes-book) :');
    $templateName = readline('Its name in your language (Example : All my recipes ...) :');
}

if ($action) {
    switch ($action) {
        case 'entity':
            if ($entityName && $singular && $plural) {
                $creator = new EntityCreate([
                    'entity' => $entityName,
                    'singular' => $singular,
                    'plural' => $plural
                ]);
                $creator->create();
                echo $creator->getMessage()['status']($creator->getMessage()['message']);
            } else {
                echo error('Missing arguments ! Wanted : php console/create entity "entityName" "singular name" "plurial name"');
            }
            break;
        case 'template':
            if ($slug && $templateName) {
                $creator = new TemplateCreate([
                    'className' => $slug,
                    'frenchName' => $templateName,
                ]);
                $creator->create();
                echo $creator->getMessage()['status']($creator->getMessage()['message']);
            } else {
                echo error('Missing arguments ! Wanted : php console/create template "slug" "template name"');
            }
            break;

        default:
            echo nothing();
            break;
    }
} else {
    echo error("You didn't specify what you wanted to create");
}

/**
 * @param $error
 * @return string
 */
function error($error): string
{
    if(!$error || $error === '') {
        $error = 'We were unable to determine the source of the error';
    }
    $colors = new Colors();
    return $colors->getColoredString(
        PHP_EOL . PHP_EOL . ':-( *********** ERROR ***********' . PHP_EOL . $error . PHP_EOL . '**********************************' . PHP_EOL . PHP_EOL,
        'red'
    );
}

/**
 * @param $message
 * @return string
 */
function success($message): string
{
    $colors = new Colors();
    return $colors->getColoredString(
        PHP_EOL . PHP_EOL . ':-) ********** SUCCESS ***********' . PHP_EOL . $message . PHP_EOL . '**********************************' . PHP_EOL . PHP_EOL,
        'green'
    );
}

/**
 * @return string
 */
function nothing(): string
{
    $colors = new Colors();
    return $colors->getColoredString(
        PHP_EOL . PHP_EOL . ':-| ********** ??? ***********' . PHP_EOL . 'Nothing has been done' . PHP_EOL . '******************************' . PHP_EOL . PHP_EOL,
        'yellow'
    );
}

/**
 * @param $message
 * @return string
 */
function message($message): string
{
    $colors = new Colors();
    return $colors->getColoredString($message, 'green');
}

/**
 * @param $routeName
 * @return bool
 */
function routeExists($routeName): bool
{
    $file = __DIR__ . '/../routes.php';
    return count(explode('^' . $routeName, file_get_contents($file))) > 1;
}

